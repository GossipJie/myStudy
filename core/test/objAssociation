var foo = {
    something: function () {
        console.log("tell me something good ...")
    }
}
function Foo () {
    function something() {
        console.log("tell me something good ...")
    }
}

console.log(Foo.prototype)
console.log(Foo.__proto__)

var bar = Object.create(foo)

var Bar = Object.create(Foo)

console.log(bar.prototype)
console.log(bar.__proto__)


console.log(Bar.prototype)
console.log(Bar.__proto__)
// var baz = new foo()
//
// console.log(baz.prototype)
// console.log(baz.__proto__)

var kong = Object.create(null)
console.log(kong)
console.log(kong.__proto__)
console.log(kong.prototype)

// IE5之前Object.create 的polyfill代码
if (!Object.create) {
    Object.create = function (o) {
        function F() {

        }
        F.prototype = o
        return new F()
    }
}

console.log(Object.create)

var anotherObject = {
    a: 2
}
var myObject = Object.create(anotherObject, {
    b: {
        enumerable: false,
        writable:true,
        configurable: false,
        value:3
    },
    c: {
        enumerable: true,
        writable: false,
        configurable: false,
        value: 4
    }
})


console.log('myObject.a  myObject.b', myObject.a, myObject.b)
console.log('myObject', myObject)
console.log('myObject.__proto__', myObject.__proto__)
console.log('myObject.prototype', myObject.prototype)


// 自定义创建对象
function createAndLinkObject(o) {
    function F() {
    }
    F.prototype = o
    return new F()
}

var anotherObject = {
    a:2
}

var myObject = createAndLinkObject(anotherObject)

console.log('myObject.a  myObject.b', myObject.a, myObject.b)
console.log('myObject', myObject)
console.log('myObject.__proto__', myObject.__proto__)
console.log('myObject.prototype', myObject.prototype)

for (let i in myObject) {
    console.log(i)
}
